#pragma once
// Generated by Igor Gimelfarb

const uint8_t consolabUkr6Bitmaps[] PROGMEM = {
  0xC9, 0x24, 0x12, 0xD6, 0xB4, 0x28, 0x51, 0xF3, 0x46, 0x9F, 0x92, 0x24, 
  0x10, 0x71, 0x42, 0x87, 0x07, 0x8F, 0x16, 0x78, 0x40, 0x65, 0x5A, 0xE3, 
  0x83, 0xC6, 0x95, 0x66, 0x30, 0x91, 0x63, 0x87, 0x5B, 0xB3, 0x3E, 0x49, 
  0x00, 0x11, 0x98, 0x84, 0x21, 0x08, 0x61, 0x84, 0x43, 0x08, 0x61, 0x08, 
  0x46, 0x23, 0x10, 0x11, 0x73, 0x97, 0x10, 0x10, 0x23, 0xF0, 0x81, 0x00, 
  0x62, 0x2C, 0xF0, 0xD8, 0x0C, 0x21, 0x84, 0x30, 0x82, 0x10, 0x40, 0x38, 
  0x99, 0x36, 0xEE, 0x58, 0x93, 0x1C, 0x11, 0xC5, 0x04, 0x10, 0x41, 0x1F, 
  0x39, 0x20, 0xC2, 0x18, 0xC6, 0x1F, 0x78, 0x20, 0x8E, 0x0C, 0x30, 0xDE, 
  0x18, 0x70, 0xA3, 0x44, 0x9F, 0x82, 0x04, 0x79, 0x04, 0x1E, 0x0C, 0x30, 
  0xDE, 0x3C, 0xC1, 0x03, 0xC6, 0xC8, 0x93, 0x1C, 0x7C, 0x30, 0x86, 0x10, 
  0xC3, 0x18, 0x39, 0x34, 0xDE, 0x79, 0x34, 0xDE, 0x39, 0x3C, 0xD3, 0x7C, 
  0x30, 0x9C, 0xD8, 0x0D, 0x80, 0x66, 0x00, 0x62, 0x2C, 0x08, 0x63, 0x18, 
  0x30, 0x60, 0x80, 0x7C, 0x07, 0xC0, 0x43, 0x0C, 0x33, 0x31, 0x00, 0x61, 
  0x86, 0x27, 0x01, 0x8C, 0x38, 0xC9, 0x17, 0xFE, 0xDF, 0xAF, 0x40, 0x40, 
  0xF0, 0x30, 0x70, 0xA3, 0x44, 0xCF, 0xB1, 0x62, 0x78, 0x99, 0x33, 0xC4, 
  0xC8, 0x93, 0x3C, 0x3D, 0x84, 0x10, 0x41, 0x06, 0x0F, 0xF9, 0x9B, 0x16, 
  0x2C, 0x58, 0xB3, 0x7C, 0xFE, 0x31, 0xFC, 0x63, 0x1F, 0xFE, 0x31, 0x8F, 
  0x63, 0x18, 0x38, 0xC9, 0x06, 0x0D, 0xD8, 0x99, 0x1E, 0x44, 0x89, 0x13, 
  0xE4, 0x48, 0x91, 0x22, 0x7C, 0x41, 0x04, 0x10, 0x41, 0x1F, 0xF0, 0x84, 
  0x21, 0x08, 0x4C, 0x4C, 0x91, 0x63, 0x87, 0x0B, 0x12, 0x26, 0xC6, 0x31, 
  0x8C, 0x63, 0x1F, 0x4C, 0xD9, 0xB7, 0xAF, 0x5A, 0xB1, 0x42, 0x64, 0xC9, 
  0x93, 0xA5, 0x4B, 0x93, 0x26, 0x38, 0x9B, 0x16, 0x2C, 0x58, 0x93, 0x1C, 
  0x78, 0x99, 0x12, 0x67, 0x88, 0x10, 0x20, 0x38, 0x9B, 0x16, 0x2C, 0x58, 
  0x93, 0x1C, 0x10, 0x38, 0x78, 0x99, 0x32, 0x47, 0x8B, 0x13, 0x26, 0x39, 
  0x04, 0x1C, 0x1C, 0x30, 0xDE, 0xFC, 0x20, 0x40, 0x81, 0x02, 0x04, 0x08, 
  0x44, 0x89, 0x12, 0x24, 0x48, 0x93, 0x1C, 0xC5, 0x89, 0x33, 0x66, 0x87, 
  0x0E, 0x18, 0x85, 0x8B, 0x56, 0xAF, 0x5D, 0x9B, 0x26, 0xCC, 0xD0, 0xE1, 
  0x83, 0x8F, 0x1B, 0x66, 0xC4, 0x99, 0xA1, 0xC3, 0x02, 0x04, 0x08, 0x7C, 
  0x21, 0x84, 0x30, 0x86, 0x1F, 0x74, 0x44, 0x44, 0x44, 0x44, 0x70, 0x40, 
  0xC0, 0x81, 0x81, 0x03, 0x02, 0x06, 0x04, 0x73, 0x33, 0x33, 0x33, 0x33, 
  0x70, 0x30, 0x71, 0xA2, 0x60, 0xFE, 0x63, 0x78, 0x33, 0xD3, 0x4D, 0xF0, 
  0x40, 0x81, 0xE3, 0x64, 0x48, 0x93, 0x3C, 0x3D, 0x84, 0x10, 0x60, 0xF0, 
  0x0C, 0x33, 0xD3, 0x4D, 0x34, 0xDF, 0x39, 0x37, 0xD0, 0x60, 0xF0, 0x1C, 
  0x60, 0xC7, 0xE3, 0x06, 0x0C, 0x18, 0x3C, 0x91, 0x23, 0xC4, 0x0F, 0x93, 
  0x3C, 0x41, 0x07, 0x9B, 0x4D, 0x34, 0xD3, 0x10, 0x40, 0x1C, 0x10, 0x41, 
  0x04, 0x7C, 0x08, 0x20, 0x1E, 0x08, 0x20, 0x82, 0x08, 0x67, 0x00, 0x40, 
  0x81, 0x32, 0xC7, 0x0E, 0x16, 0x26, 0x70, 0x41, 0x04, 0x10, 0x41, 0x1F, 
  0xFD, 0xAB, 0x56, 0xAD, 0x5A, 0x80, 0x79, 0xB4, 0xD3, 0x4D, 0x30, 0x38, 
  0x99, 0x16, 0x24, 0xC7, 0x00, 0x78, 0xD9, 0x12, 0x24, 0xCF, 0x10, 0x20, 
  0x3D, 0x34, 0xD3, 0x4D, 0xF0, 0xC3, 0xFB, 0x2C, 0x30, 0xC3, 0x00, 0x39, 
  0x87, 0x07, 0x0D, 0xE0, 0x20, 0x8F, 0xC8, 0x20, 0x83, 0x07, 0x4D, 0x34, 
  0xD3, 0x4D, 0xF0, 0xC4, 0x99, 0xB1, 0x43, 0x86, 0x00, 0x85, 0x8B, 0x53, 
  0xA6, 0xCD, 0x80, 0x4C, 0xD0, 0xE1, 0xC6, 0x89, 0x80, 0xC4, 0x99, 0xA1, 
  0x43, 0x86, 0x0C, 0x70, 0x7C, 0x61, 0x0C, 0x21, 0xF0, 0x18, 0x43, 0x0C, 
  0x31, 0x83, 0x0C, 0x30, 0x41, 0x80, 0x55, 0x55, 0x55, 0xC1, 0x08, 0x42, 
  0x0C, 0x84, 0x21, 0x30, 0x65, 0xAB, 0x30, 0xFD, 0x0A, 0xD4, 0xE8, 0x54, 
  0xA1, 0x7E, 0x78, 0xD9, 0x12, 0x24, 0xCF, 0x10, 0x20, 0x3D, 0x84, 0x10, 
  0x60, 0xF0, 0xFC, 0x20, 0x40, 0x81, 0x02, 0x00, 0xC4, 0x99, 0xA1, 0x43, 
  0x86, 0x0C, 0x70, 0x10, 0x21, 0xE6, 0xAD, 0x5A, 0xB5, 0x3C, 0x10, 0x20, 
  0x4C, 0xD0, 0xE1, 0xC6, 0x89, 0x80, 0x4C, 0x99, 0x32, 0x64, 0xCF, 0x81, 
  0x02, 0xCF, 0x34, 0xDF, 0x0C, 0x30, 0xD5, 0xAB, 0x56, 0xAD, 0x5F, 0x80, 
  0xD5, 0xAB, 0x56, 0xAD, 0x5F, 0xC1, 0x83, 0xE0, 0xC1, 0xF3, 0x26, 0x4F, 
  0x00, 0xC5, 0x8B, 0xD6, 0xED, 0xDE, 0x80, 0x40, 0x81, 0xE2, 0x24, 0x4F, 
  0x00, 0x78, 0x37, 0xC3, 0x0D, 0xE0, 0xDD, 0xAB, 0xD7, 0xAD, 0x5B, 0x80, 
  0x3D, 0xB6, 0xCF, 0x6D, 0x30, 0x30, 0x70, 0xA3, 0x44, 0xCF, 0xB1, 0x62, 
  0x7C, 0x81, 0x03, 0xC4, 0xC8, 0x93, 0x3C, 0x78, 0x99, 0x33, 0xC4, 0xC8, 
  0x93, 0x3C, 0xFE, 0x31, 0x8C, 0x63, 0x18, 0x3C, 0x58, 0xB1, 0x66, 0xCD, 
  0x93, 0x7F, 0x85, 0x08, 0xFE, 0x31, 0xFC, 0x63, 0x1F, 0xD4, 0xA9, 0xF3, 
  0xC7, 0x8F, 0xB5, 0x6A, 0x78, 0x30, 0xDE, 0x0C, 0x30, 0xDE, 0x4C, 0x99, 
  0x72, 0xE7, 0x4C, 0x99, 0x22, 0x68, 0x70, 0x02, 0x64, 0xCB, 0x97, 0x3A, 
  0x64, 0xC9, 0x10, 0x4C, 0x91, 0x63, 0x87, 0x0B, 0x12, 0x26, 0x3C, 0xB2, 
  0xCB, 0x6D, 0xB4, 0xF3, 0x00, 0x4C, 0xD9, 0xB7, 0xAF, 0x5A, 0xB1, 0x42, 
  0x44, 0x89, 0x13, 0xE4, 0x48, 0x91, 0x22, 0x38, 0x9B, 0x16, 0x2C, 0x58, 
  0x93, 0x1C, 0x7C, 0x89, 0x12, 0x24, 0x48, 0x91, 0x22, 0x78, 0x99, 0x12, 
  0x67, 0x88, 0x10, 0x20, 0x3D, 0x84, 0x10, 0x41, 0x06, 0x0F, 0xFC, 0x20, 
  0x40, 0x81, 0x02, 0x04, 0x08, 0xC4, 0xD9, 0xB1, 0xC3, 0x82, 0x0C, 0x30, 
  0x30, 0xF3, 0xD6, 0xAD, 0x5A, 0x9F, 0x08, 0xCC, 0xD0, 0xE1, 0x83, 0x8F, 
  0x1B, 0x66, 0x4C, 0x99, 0x32, 0x64, 0xC9, 0x93, 0x3F, 0x04, 0x08, 0xC5, 
  0x89, 0x12, 0x23, 0xC0, 0x81, 0x02, 0xD5, 0xAB, 0x56, 0xAD, 0x5A, 0xB5, 
  0x7E, 0xD5, 0xAB, 0x56, 0xAD, 0x5A, 0xB5, 0x7F, 0x06, 0x0C, 0xE0, 0xC1, 
  0x83, 0xC6, 0xCC, 0x9B, 0x3C, 0xC5, 0x8B, 0x17, 0xAD, 0xDB, 0xB5, 0x7A, 
  0x40, 0x81, 0x03, 0xC4, 0xC8, 0x93, 0x3C, 0x78, 0x18, 0x33, 0xE0, 0xC1, 
  0x83, 0x3C, 0xDD, 0xAB, 0xD7, 0xAF, 0x5E, 0xB5, 0x6E, 0x3D, 0xB4, 0xDB, 
  0x3D, 0xB4, 0xD3, 0x78, 0x33, 0xD3, 0x4D, 0xF0, 0x04, 0x71, 0x83, 0xC6, 
  0xC8, 0x91, 0x36, 0x38, 0x78, 0x99, 0xE2, 0x64, 0xCF, 0x00, 0xFE, 0x31, 
  0x8C, 0x60, 0x3C, 0x58, 0xB3, 0x66, 0xDF, 0xA1, 0x42, 0x39, 0x37, 0xD0, 
  0x60, 0xF0, 0xD4, 0xA9, 0xE3, 0xC5, 0x5A, 0x80, 0x78, 0x37, 0x83, 0x0D, 
  0xE0, 0x4D, 0x35, 0xDF, 0x6D, 0x30, 0x68, 0xE0, 0x13, 0x4D, 0x77, 0xDB, 
  0x4C, 0x4C, 0xB1, 0xC3, 0x85, 0x89, 0x80, 0x3C, 0xB2, 0xDB, 0x6F, 0x30, 
  0x4C, 0xDB, 0xF7, 0xAD, 0x58, 0x80, 0x4D, 0x37, 0xD3, 0x4D, 0x30, 0x38, 
  0x99, 0x16, 0x24, 0xC7, 0x00, 0x7D, 0x34, 0xD3, 0x4D, 0x30, 0xD6, 0x81, 
  0xFC, 0x63, 0xF8, 0xC6, 0x3E, 0x69, 0xA0, 0x0E, 0x4D, 0xF4, 0x18, 0x3C, 
  0x3D, 0x84, 0x1F, 0x41, 0x06, 0x0F, 0x3D, 0x87, 0xD0, 0x60, 0xF0, 0x7C, 
  0x41, 0x04, 0x10, 0x41, 0x1F, 0x10, 0x40, 0x1C, 0x10, 0x41, 0x04, 0x7C, 
  0x69, 0xA0, 0x1F, 0x10, 0x41, 0x04, 0x10, 0x47, 0xC0, 0x69, 0xA0, 0x1C, 
  0x10, 0x41, 0x04, 0x7C, 0x0F, 0xF1, 0x8C, 0x63, 0x18, 0xC0, 0x0F, 0xF1, 
  0x8C, 0x63, 0x00, 0x78, 0x18, 0x37, 0xE7, 0x1F, 0x90, 0x1E, 0x49, 0x00, 
  0x76, 0xB4, 0xE0
};

const GFXglyph consolabUkr6Glyphs[] PROGMEM = {
  /* GFX: 0x20 (U+0020 ' ') */ { 0, 0, 0, 7, 0, 0 },
  /* GFX: 0x21 (U+0021 '!') */ { 0, 3, 8, 7, 2, -6 },
  /* GFX: 0x22 (U+0022 '"') */ { 3, 5, 3, 7, 1, -6 },
  /* GFX: 0x23 (U+0023 '#') */ { 5, 7, 8, 7, 0, -6 },
  /* GFX: 0x24 (U+0024 '$') */ { 12, 7, 10, 7, 0, -7 },
  /* GFX: 0x25 (U+0025 '%') */ { 21, 7, 8, 7, 0, -6 },
  /* GFX: 0x26 (U+0026 '&') */ { 28, 7, 8, 7, 0, -6 },
  /* GFX: 0x27 (U+0027 ''') */ { 35, 3, 3, 7, 2, -6 },
  /* GFX: 0x28 (U+0028 '(') */ { 37, 5, 11, 7, 1, -7 },
  /* GFX: 0x29 (U+0029 ')') */ { 44, 5, 11, 7, 1, -7 },
  /* GFX: 0x2A (U+002A '*') */ { 51, 6, 5, 7, 0, -6 },
  /* GFX: 0x2B (U+002B '+') */ { 55, 7, 5, 7, 0, -4 },
  /* GFX: 0x2C (U+002C ',') */ { 60, 4, 4, 7, 1, 0 },
  /* GFX: 0x2D (U+002D '-') */ { 62, 5, 1, 7, 1, -2 },
  /* GFX: 0x2E (U+002E '.') */ { 63, 3, 2, 7, 2, 0 },
  /* GFX: 0x2F (U+002F '/') */ { 64, 6, 9, 7, 0, -6 },
  /* GFX: 0x30 (U+0030 '0') */ { 71, 7, 8, 7, 0, -6 },
  /* GFX: 0x31 (U+0031 '1') */ { 78, 6, 8, 7, 0, -6 },
  /* GFX: 0x32 (U+0032 '2') */ { 84, 6, 8, 7, 0, -6 },
  /* GFX: 0x33 (U+0033 '3') */ { 90, 6, 8, 7, 0, -6 },
  /* GFX: 0x34 (U+0034 '4') */ { 96, 7, 8, 7, 0, -6 },
  /* GFX: 0x35 (U+0035 '5') */ { 103, 6, 8, 7, 0, -6 },
  /* GFX: 0x36 (U+0036 '6') */ { 109, 7, 8, 7, 0, -6 },
  /* GFX: 0x37 (U+0037 '7') */ { 116, 6, 8, 7, 0, -6 },
  /* GFX: 0x38 (U+0038 '8') */ { 122, 6, 8, 7, 0, -6 },
  /* GFX: 0x39 (U+0039 '9') */ { 128, 6, 8, 7, 0, -6 },
  /* GFX: 0x3A (U+003A ':') */ { 134, 3, 6, 7, 2, -4 },
  /* GFX: 0x3B (U+003B ';') */ { 137, 4, 8, 7, 1, -4 },
  /* GFX: 0x3C (U+003C '<') */ { 141, 6, 7, 7, 0, -5 },
  /* GFX: 0x3D (U+003D '=') */ { 147, 6, 3, 7, 0, -3 },
  /* GFX: 0x3E (U+003E '>') */ { 150, 5, 7, 7, 1, -5 },
  /* GFX: 0x3F (U+003F '?') */ { 155, 5, 8, 7, 1, -6 },
  /* GFX: 0x40 (U+0040 '@') */ { 160, 7, 10, 7, 0, -6 },
  /* GFX: 0x41 (U+0041 'A') */ { 169, 7, 8, 7, 0, -6 },
  /* GFX: 0x42 (U+0042 'B') */ { 176, 7, 8, 7, 0, -6 },
  /* GFX: 0x43 (U+0043 'C') */ { 183, 6, 8, 7, 0, -6 },
  /* GFX: 0x44 (U+0044 'D') */ { 189, 7, 8, 7, 0, -6 },
  /* GFX: 0x45 (U+0045 'E') */ { 196, 5, 8, 7, 1, -6 },
  /* GFX: 0x46 (U+0046 'F') */ { 201, 5, 8, 7, 1, -6 },
  /* GFX: 0x47 (U+0047 'G') */ { 206, 7, 8, 7, 0, -6 },
  /* GFX: 0x48 (U+0048 'H') */ { 213, 7, 8, 7, 0, -6 },
  /* GFX: 0x49 (U+0049 'I') */ { 220, 6, 8, 7, 0, -6 },
  /* GFX: 0x4A (U+004A 'J') */ { 226, 5, 8, 7, 1, -6 },
  /* GFX: 0x4B (U+004B 'K') */ { 231, 7, 8, 7, 0, -6 },
  /* GFX: 0x4C (U+004C 'L') */ { 238, 5, 8, 7, 1, -6 },
  /* GFX: 0x4D (U+004D 'M') */ { 243, 7, 8, 7, 0, -6 },
  /* GFX: 0x4E (U+004E 'N') */ { 250, 7, 8, 7, 0, -6 },
  /* GFX: 0x4F (U+004F 'O') */ { 257, 7, 8, 7, 0, -6 },
  /* GFX: 0x50 (U+0050 'P') */ { 264, 7, 8, 7, 0, -6 },
  /* GFX: 0x51 (U+0051 'Q') */ { 271, 7, 10, 7, 0, -6 },
  /* GFX: 0x52 (U+0052 'R') */ { 280, 7, 8, 7, 0, -6 },
  /* GFX: 0x53 (U+0053 'S') */ { 287, 6, 8, 7, 0, -6 },
  /* GFX: 0x54 (U+0054 'T') */ { 293, 7, 8, 7, 0, -6 },
  /* GFX: 0x55 (U+0055 'U') */ { 300, 7, 8, 7, 0, -6 },
  /* GFX: 0x56 (U+0056 'V') */ { 307, 7, 8, 7, 0, -6 },
  /* GFX: 0x57 (U+0057 'W') */ { 314, 7, 8, 7, 0, -6 },
  /* GFX: 0x58 (U+0058 'X') */ { 321, 7, 8, 7, 0, -6 },
  /* GFX: 0x59 (U+0059 'Y') */ { 328, 7, 8, 7, 0, -6 },
  /* GFX: 0x5A (U+005A 'Z') */ { 335, 6, 8, 7, 0, -6 },
  /* GFX: 0x5B (U+005B '[') */ { 341, 4, 11, 7, 1, -7 },
  /* GFX: 0x5C (U+005C '\') */ { 347, 7, 9, 7, 0, -6 },
  /* GFX: 0x5D (U+005D ']') */ { 355, 4, 11, 7, 1, -7 },
  /* GFX: 0x5E (U+005E '^') */ { 361, 7, 4, 7, 0, -6 },
  /* GFX: 0x5F (U+005F '_') */ { 365, 7, 1, 7, 0, 3 },
  /* GFX: 0x60 (U+0060 '`') */ { 366, 4, 2, 7, 0, -7 },
  /* GFX: 0x61 (U+0061 'a') */ { 367, 6, 6, 7, 0, -4 },
  /* GFX: 0x62 (U+0062 'b') */ { 372, 7, 8, 7, 0, -6 },
  /* GFX: 0x63 (U+0063 'c') */ { 379, 6, 6, 7, 0, -4 },
  /* GFX: 0x64 (U+0064 'd') */ { 384, 6, 8, 7, 0, -6 },
  /* GFX: 0x65 (U+0065 'e') */ { 390, 6, 6, 7, 0, -4 },
  /* GFX: 0x66 (U+0066 'f') */ { 395, 7, 8, 7, 0, -6 },
  /* GFX: 0x67 (U+0067 'g') */ { 402, 7, 8, 7, 0, -4 },
  /* GFX: 0x68 (U+0068 'h') */ { 409, 6, 8, 7, 0, -6 },
  /* GFX: 0x69 (U+0069 'i') */ { 415, 6, 9, 7, 0, -7 },
  /* GFX: 0x6A (U+006A 'j') */ { 422, 6, 11, 7, 0, -7 },
  /* GFX: 0x6B (U+006B 'k') */ { 431, 7, 8, 7, 0, -6 },
  /* GFX: 0x6C (U+006C 'l') */ { 438, 6, 8, 7, 0, -6 },
  /* GFX: 0x6D (U+006D 'm') */ { 444, 7, 6, 7, 0, -4 },
  /* GFX: 0x6E (U+006E 'n') */ { 450, 6, 6, 7, 0, -4 },
  /* GFX: 0x6F (U+006F 'o') */ { 455, 7, 6, 7, 0, -4 },
  /* GFX: 0x70 (U+0070 'p') */ { 461, 7, 8, 7, 0, -4 },
  /* GFX: 0x71 (U+0071 'q') */ { 468, 6, 8, 7, 0, -4 },
  /* GFX: 0x72 (U+0072 'r') */ { 474, 6, 6, 7, 1, -4 },
  /* GFX: 0x73 (U+0073 's') */ { 479, 6, 6, 7, 0, -4 },
  /* GFX: 0x74 (U+0074 't') */ { 484, 6, 8, 7, 0, -6 },
  /* GFX: 0x75 (U+0075 'u') */ { 490, 6, 6, 7, 0, -4 },
  /* GFX: 0x76 (U+0076 'v') */ { 495, 7, 6, 7, 0, -4 },
  /* GFX: 0x77 (U+0077 'w') */ { 501, 7, 6, 7, 0, -4 },
  /* GFX: 0x78 (U+0078 'x') */ { 507, 7, 6, 7, 0, -4 },
  /* GFX: 0x79 (U+0079 'y') */ { 513, 7, 8, 7, 0, -4 },
  /* GFX: 0x7A (U+007A 'z') */ { 520, 6, 6, 7, 0, -4 },
  /* GFX: 0x7B (U+007B '{') */ { 525, 6, 11, 7, 0, -7 },
  /* GFX: 0x7C (U+007C '|') */ { 534, 2, 12, 7, 2, -8 },
  /* GFX: 0x7D (U+007D '}') */ { 537, 5, 11, 7, 1, -7 },
  /* GFX: 0x7E (U+007E '~') */ { 544, 7, 3, 7, 0, -3 },
  /* GFX: 0x7F (U+007F '?') */ { 547, 7, 8, 7, 0, -6 },
  /* GFX: 0x80 (U+0440 'р') */ { 554, 7, 8, 7, 0, -4 },
  /* GFX: 0x81 (U+0441 'с') */ { 561, 6, 6, 7, 0, -4 },
  /* GFX: 0x82 (U+0442 'т') */ { 566, 7, 6, 7, 0, -4 },
  /* GFX: 0x83 (U+0443 'у') */ { 572, 7, 8, 7, 0, -4 },
  /* GFX: 0x84 (U+0444 'ф') */ { 579, 7, 10, 7, 0, -6 },
  /* GFX: 0x85 (U+0445 'х') */ { 588, 7, 6, 7, 0, -4 },
  /* GFX: 0x86 (U+0446 'ц') */ { 594, 7, 8, 7, 0, -4 },
  /* GFX: 0x87 (U+0447 'ч') */ { 601, 6, 6, 7, 0, -4 },
  /* GFX: 0x88 (U+0448 'ш') */ { 606, 7, 6, 7, 0, -4 },
  /* GFX: 0x89 (U+0449 'щ') */ { 612, 7, 8, 7, 0, -4 },
  /* GFX: 0x8A (U+044A 'ъ') */ { 619, 7, 6, 7, 0, -4 },
  /* GFX: 0x8B (U+044B 'ы') */ { 625, 7, 6, 7, 0, -4 },
  /* GFX: 0x8C (U+044C 'ь') */ { 631, 7, 6, 7, 0, -4 },
  /* GFX: 0x8D (U+044D 'э') */ { 637, 6, 6, 7, 0, -4 },
  /* GFX: 0x8E (U+044E 'ю') */ { 642, 7, 6, 7, 0, -4 },
  /* GFX: 0x8F (U+044F 'я') */ { 648, 6, 6, 7, 0, -4 },
  /* GFX: 0x90 (U+0410 'А') */ { 653, 7, 8, 7, 0, -6 },
  /* GFX: 0x91 (U+0411 'Б') */ { 660, 7, 8, 7, 0, -6 },
  /* GFX: 0x92 (U+0412 'В') */ { 667, 7, 8, 7, 0, -6 },
  /* GFX: 0x93 (U+0413 'Г') */ { 674, 5, 8, 7, 1, -6 },
  /* GFX: 0x94 (U+0414 'Д') */ { 679, 7, 10, 7, 0, -6 },
  /* GFX: 0x95 (U+0415 'Е') */ { 688, 5, 8, 7, 1, -6 },
  /* GFX: 0x96 (U+0416 'Ж') */ { 693, 7, 8, 7, 0, -6 },
  /* GFX: 0x97 (U+0417 'З') */ { 700, 6, 8, 7, 0, -6 },
  /* GFX: 0x98 (U+0418 'И') */ { 706, 7, 8, 7, 0, -6 },
  /* GFX: 0x99 (U+0419 'Й') */ { 713, 7, 11, 7, 0, -9 },
  /* GFX: 0x9A (U+041A 'К') */ { 723, 7, 8, 7, 0, -6 },
  /* GFX: 0x9B (U+041B 'Л') */ { 730, 6, 9, 7, 0, -6 },
  /* GFX: 0x9C (U+041C 'М') */ { 737, 7, 8, 7, 0, -6 },
  /* GFX: 0x9D (U+041D 'Н') */ { 744, 7, 8, 7, 0, -6 },
  /* GFX: 0x9E (U+041E 'О') */ { 751, 7, 8, 7, 0, -6 },
  /* GFX: 0x9F (U+041F 'П') */ { 758, 7, 8, 7, 0, -6 },
  /* GFX: 0xA0 (U+0420 'Р') */ { 765, 7, 8, 7, 0, -6 },
  /* GFX: 0xA1 (U+0421 'С') */ { 772, 6, 8, 7, 0, -6 },
  /* GFX: 0xA2 (U+0422 'Т') */ { 778, 7, 8, 7, 0, -6 },
  /* GFX: 0xA3 (U+0423 'У') */ { 785, 7, 8, 7, 0, -6 },
  /* GFX: 0xA4 (U+0424 'Ф') */ { 792, 7, 8, 7, 0, -6 },
  /* GFX: 0xA5 (U+0425 'Х') */ { 799, 7, 8, 7, 0, -6 },
  /* GFX: 0xA6 (U+0426 'Ц') */ { 806, 7, 10, 7, 0, -6 },
  /* GFX: 0xA7 (U+0427 'Ч') */ { 815, 7, 8, 7, 0, -6 },
  /* GFX: 0xA8 (U+0428 'Ш') */ { 822, 7, 8, 7, 0, -6 },
  /* GFX: 0xA9 (U+0429 'Щ') */ { 829, 7, 10, 7, 0, -6 },
  /* GFX: 0xAA (U+042A 'Ъ') */ { 838, 7, 8, 7, 0, -6 },
  /* GFX: 0xAB (U+042B 'Ы') */ { 845, 7, 8, 7, 0, -6 },
  /* GFX: 0xAC (U+042C 'Ь') */ { 852, 7, 8, 7, 0, -6 },
  /* GFX: 0xAD (U+042D 'Э') */ { 859, 7, 8, 7, 0, -6 },
  /* GFX: 0xAE (U+042E 'Ю') */ { 866, 7, 8, 7, 0, -6 },
  /* GFX: 0xAF (U+042F 'Я') */ { 873, 6, 8, 7, 0, -6 },
  /* GFX: 0xB0 (U+0430 'а') */ { 879, 6, 6, 7, 0, -4 },
  /* GFX: 0xB1 (U+0431 'б') */ { 884, 7, 9, 7, 0, -7 },
  /* GFX: 0xB2 (U+0432 'в') */ { 892, 7, 6, 7, 0, -4 },
  /* GFX: 0xB3 (U+0433 'г') */ { 898, 5, 6, 7, 1, -4 },
  /* GFX: 0xB4 (U+0434 'д') */ { 902, 7, 8, 7, 0, -4 },
  /* GFX: 0xB5 (U+0435 'е') */ { 909, 6, 6, 7, 0, -4 },
  /* GFX: 0xB6 (U+0436 'ж') */ { 914, 7, 6, 7, 0, -4 },
  /* GFX: 0xB7 (U+0437 'з') */ { 920, 6, 6, 7, 0, -4 },
  /* GFX: 0xB8 (U+0438 'и') */ { 925, 6, 6, 7, 0, -4 },
  /* GFX: 0xB9 (U+0439 'й') */ { 930, 6, 9, 7, 0, -7 },
  /* GFX: 0xBA (U+043A 'к') */ { 937, 7, 6, 7, 0, -4 },
  /* GFX: 0xBB (U+043B 'л') */ { 943, 6, 6, 7, 0, -4 },
  /* GFX: 0xBC (U+043C 'м') */ { 948, 7, 6, 7, 0, -4 },
  /* GFX: 0xBD (U+043D 'н') */ { 954, 6, 6, 7, 0, -4 },
  /* GFX: 0xBE (U+043E 'о') */ { 959, 7, 6, 7, 0, -4 },
  /* GFX: 0xBF (U+043F 'п') */ { 965, 6, 6, 7, 0, -4 },
  /* GFX: 0xC0 (U+0401 'Ё') */ { 970, 5, 11, 7, 1, -9 },
  /* GFX: 0xC1 (U+0451 'ё') */ { 977, 6, 9, 7, 0, -7 },
  /* GFX: 0xC2 (U+0404 'Є') */ { 984, 6, 8, 7, 0, -6 },
  /* GFX: 0xC3 (U+0454 'є') */ { 990, 6, 6, 7, 0, -4 },
  /* GFX: 0xC4 (U+0406 'І') */ { 995, 6, 8, 7, 0, -6 },
  /* GFX: 0xC5 (U+0456 'і') */ { 1001, 6, 9, 7, 0, -7 },
  /* GFX: 0xC6 (U+0407 'Ї') */ { 1008, 6, 11, 7, 0, -9 },
  /* GFX: 0xC7 (U+0457 'ї') */ { 1017, 6, 9, 7, 0, -7 },
  /* GFX: 0xC8 (U+0490 'Ґ') */ { 1024, 5, 9, 7, 1, -7 },
  /* GFX: 0xC9 (U+0491 'ґ') */ { 1030, 5, 7, 7, 1, -5 },
  /* GFX: 0xCA (U+20B4 '?') */ { 1035, 7, 8, 7, 0, -6 },
  /* GFX: 0xCB (U+0027 ''') */ { 1042, 3, 3, 7, 2, -6 },
  /* GFX: 0xCC (U+00B0 '?') */ { 1044, 5, 4, 7, 1, -6 },
};

const GFXfont consolabUkr6 PROGMEM = {
  (uint8_t  *)consolabUkr6Bitmaps,
  (GFXglyph *)consolabUkr6Glyphs,
  0x0020, 0x00CC, 13
};

// Approx. 1047 bytes
