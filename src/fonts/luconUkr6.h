#pragma once
// Generated by Igor Gimelfarb

const uint8_t luconUkr6Bitmaps[] PROGMEM = {
  0x49, 0x24, 0x82, 0xDA, 0xD2, 0x14, 0x29, 0xF9, 0x42, 0x9F, 0x92, 0x28, 
  0x21, 0xE6, 0x18, 0x60, 0xE2, 0x8A, 0x70, 0x80, 0x62, 0xA4, 0xA8, 0x70, 
  0x1E, 0x2A, 0x4A, 0x8E, 0x38, 0x28, 0x28, 0x30, 0x52, 0x8A, 0xCC, 0x7E, 
  0x49, 0x00, 0x13, 0x11, 0x88, 0x42, 0x18, 0x43, 0x04, 0x40, 0xC1, 0x02, 
  0x08, 0x20, 0x82, 0x10, 0xC4, 0x00, 0x23, 0x21, 0x14, 0x10, 0x23, 0xF8, 
  0x81, 0x02, 0x00, 0x49, 0x20, 0xF8, 0x48, 0x02, 0x08, 0x10, 0x40, 0x82, 
  0x04, 0x10, 0x20, 0x81, 0x00, 0x38, 0xC9, 0x12, 0x34, 0x68, 0x99, 0x1C, 
  0x32, 0xC3, 0x0C, 0x30, 0xC3, 0x3F, 0x38, 0x30, 0x42, 0x10, 0x86, 0x1F, 
  0x70, 0x21, 0x9C, 0x18, 0x21, 0x9C, 0x08, 0x30, 0xE1, 0x44, 0x8F, 0xC2, 
  0x04, 0x79, 0x04, 0x1C, 0x18, 0x21, 0x9C, 0x1C, 0x41, 0x02, 0xE6, 0x48, 
  0xD9, 0x1C, 0xF8, 0x21, 0x04, 0x20, 0x84, 0x10, 0x38, 0xC8, 0x91, 0xC2, 
  0xC8, 0x99, 0x1C, 0x38, 0x89, 0x12, 0x23, 0xC0, 0x83, 0x1C, 0x48, 0x04, 
  0x80, 0x48, 0x04, 0x92, 0x02, 0x18, 0xC1, 0x80, 0xC0, 0x40, 0xFE, 0x03, 
  0xF8, 0x40, 0x60, 0x30, 0x63, 0x08, 0x00, 0x7C, 0x88, 0x10, 0x41, 0x02, 
  0x00, 0x18, 0x3C, 0x64, 0x4E, 0x12, 0x96, 0x5A, 0x40, 0x38, 0x10, 0x38, 
  0x28, 0x28, 0x44, 0x7C, 0x46, 0x82, 0xF2, 0x28, 0xBC, 0x9A, 0x28, 0xBE, 
  0x1C, 0xC1, 0x02, 0x04, 0x08, 0x18, 0x0F, 0x78, 0x89, 0x1A, 0x34, 0x68, 
  0xD1, 0x3C, 0xFA, 0x08, 0x20, 0xFA, 0x08, 0x3F, 0xFF, 0x0C, 0x30, 0xFB, 
  0x0C, 0x30, 0x3C, 0xC1, 0x06, 0x0C, 0xE8, 0xD9, 0x9E, 0x44, 0x89, 0x13, 
  0xE4, 0x48, 0x91, 0x22, 0xF8, 0x82, 0x08, 0x20, 0x82, 0x3E, 0x70, 0x84, 
  0x21, 0x08, 0x5C, 0x8A, 0x4A, 0x38, 0xE2, 0x49, 0xA3, 0x82, 0x08, 0x20, 
  0x82, 0x08, 0x3F, 0x46, 0x8D, 0xA9, 0x51, 0xA2, 0x40, 0x81, 0x44, 0xC9, 
  0x92, 0xA5, 0x49, 0x93, 0x22, 0x38, 0x89, 0x1E, 0x1C, 0x28, 0xD1, 0x1C, 
  0xFA, 0x38, 0x62, 0xF2, 0x08, 0x20, 0x38, 0x44, 0x46, 0xC2, 0xC2, 0x46, 
  0x44, 0x38, 0x04, 0x02, 0xF2, 0x28, 0xA6, 0xF2, 0x49, 0xA3, 0x3C, 0x81, 
  0x01, 0x80, 0xC0, 0x81, 0x3C, 0xFE, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
  0x10, 0x44, 0x89, 0x12, 0x24, 0x48, 0x99, 0x1C, 0x82, 0x42, 0x44, 0x64, 
  0x28, 0x28, 0x38, 0x10, 0x82, 0x82, 0x92, 0x5A, 0x58, 0x6C, 0x6C, 0x64, 
  0x46, 0x64, 0x28, 0x10, 0x18, 0x28, 0x44, 0xC6, 0xC2, 0x44, 0x2C, 0x38, 
  0x10, 0x10, 0x10, 0x10, 0x7E, 0x08, 0x20, 0xC1, 0x04, 0x10, 0x3F, 0x72, 
  0x10, 0x84, 0x21, 0x08, 0x42, 0x1C, 0x40, 0x80, 0x81, 0x01, 0x02, 0x02, 
  0x04, 0x04, 0x08, 0x08, 0xF1, 0x11, 0x11, 0x11, 0x11, 0xF0, 0x00, 0x20, 
  0xE1, 0x42, 0x48, 0x90, 0x00, 0xFE, 0x44, 0x38, 0x08, 0xF2, 0x24, 0xCE, 
  0xC0, 0x82, 0x08, 0x2E, 0xCA, 0x38, 0xB2, 0xB0, 0x3C, 0xC1, 0x02, 0x06, 
  0x07, 0x80, 0x04, 0x08, 0x11, 0xE6, 0x48, 0x91, 0x22, 0x34, 0x38, 0x89, 
  0xF2, 0x06, 0x07, 0x80, 0x1E, 0x10, 0x10, 0x7E, 0x10, 0x10, 0x10, 0x10, 
  0x10, 0x3C, 0xC9, 0x12, 0x24, 0x46, 0x81, 0x3C, 0x82, 0x08, 0x2E, 0xCA, 
  0x28, 0xA2, 0x88, 0x30, 0x0E, 0x22, 0x22, 0x20, 0x08, 0x00, 0x1E, 0x08, 
  0x20, 0x82, 0x08, 0x27, 0x00, 0x82, 0x08, 0x22, 0x93, 0x8F, 0x26, 0x88, 
  0xF3, 0x33, 0x33, 0x33, 0x30, 0x74, 0xB5, 0x4A, 0x95, 0x2A, 0x40, 0xBB, 
  0x28, 0xA2, 0x8A, 0x20, 0x38, 0x89, 0x1A, 0x34, 0x47, 0x00, 0xBB, 0x28, 
  0xE3, 0xCB, 0xC8, 0x20, 0x3C, 0x89, 0x12, 0x24, 0x46, 0x81, 0x02, 0x59, 
  0x94, 0x10, 0x41, 0x00, 0x7B, 0x06, 0x06, 0x0B, 0xC0, 0x30, 0x61, 0xF1, 
  0x83, 0x06, 0x0C, 0x0E, 0x8A, 0x28, 0xA2, 0x99, 0xA0, 0x42, 0x89, 0x91, 
  0x43, 0x82, 0x00, 0x82, 0x92, 0x5A, 0x68, 0x6C, 0x64, 0x44, 0x50, 0x61, 
  0xC2, 0xC8, 0x80, 0x42, 0x88, 0x91, 0x41, 0x82, 0x04, 0x30, 0x7C, 0x18, 
  0x61, 0x86, 0x0F, 0x80, 0x19, 0x08, 0x42, 0x70, 0x84, 0x21, 0x06, 0xAA, 
  0xAA, 0xA8, 0xE1, 0x08, 0x42, 0x0C, 0x84, 0x21, 0x38, 0x72, 0x38, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0xBB, 0x28, 0xE3, 0xCB, 0xC8, 0x20, 0x3C, 0xC1, 
  0x02, 0x06, 0x07, 0x80, 0xFE, 0x20, 0x40, 0x81, 0x02, 0x00, 0x42, 0x88, 
  0x91, 0x41, 0x82, 0x04, 0x30, 0x10, 0x21, 0xF2, 0x99, 0x32, 0x54, 0xBE, 
  0x10, 0x20, 0x44, 0x50, 0x61, 0xC2, 0xC8, 0x80, 0x44, 0x89, 0x12, 0x24, 
  0x4F, 0xC0, 0x80, 0x45, 0x14, 0xDF, 0x04, 0x10, 0x93, 0x26, 0x4C, 0x99, 
  0x3F, 0xC0, 0x92, 0x92, 0x92, 0x92, 0x92, 0xFE, 0x02, 0xE0, 0x40, 0xF1, 
  0x22, 0x47, 0x80, 0x46, 0x8D, 0xDA, 0xF5, 0xEE, 0xC0, 0x41, 0x07, 0x92, 
  0x49, 0xE0, 0x78, 0x08, 0xF0, 0x20, 0xCF, 0x00, 0xDC, 0xD2, 0xF2, 0xD2, 
  0xD2, 0xCC, 0x3D, 0x96, 0x4F, 0x25, 0x10, 0x10, 0x38, 0x28, 0x28, 0x44, 
  0x7C, 0x46, 0x82, 0xFA, 0x08, 0x3E, 0x8A, 0x38, 0xBC, 0xF2, 0x28, 0xBC, 
  0x9A, 0x28, 0xBE, 0xFF, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0x3C, 0x48, 0x91, 
  0x22, 0x4C, 0x91, 0x7F, 0x83, 0x04, 0xFA, 0x08, 0x20, 0xFA, 0x08, 0x3F, 
  0x92, 0x54, 0x7C, 0x38, 0x3C, 0x54, 0x56, 0x92, 0x78, 0x18, 0x31, 0xC0, 
  0xC0, 0x83, 0x3C, 0x44, 0x99, 0x32, 0xA5, 0x4C, 0x99, 0x22, 0x20, 0xB9, 
  0x32, 0x65, 0x4A, 0x99, 0x32, 0x44, 0x8E, 0x69, 0x38, 0x92, 0x68, 0xA3, 
  0x3C, 0x48, 0x91, 0x22, 0x44, 0x99, 0x62, 0x46, 0x8D, 0xA9, 0x51, 0xA2, 
  0x40, 0x81, 0x44, 0x89, 0x13, 0xE4, 0x48, 0x91, 0x22, 0x38, 0x89, 0x1E, 
  0x1C, 0x28, 0xD1, 0x1C, 0x7C, 0x89, 0x12, 0x24, 0x48, 0x91, 0x22, 0xFA, 
  0x38, 0x62, 0xF2, 0x08, 0x20, 0x1C, 0xC1, 0x02, 0x04, 0x08, 0x18, 0x0F, 
  0xFE, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0xC2, 0x44, 0x64, 0x28, 
  0x38, 0x10, 0x30, 0x60, 0x10, 0x10, 0x7C, 0xD2, 0x92, 0xD2, 0x7C, 0x10, 
  0x46, 0x64, 0x28, 0x10, 0x18, 0x28, 0x44, 0xC6, 0x44, 0x44, 0x44, 0x44, 
  0x44, 0x44, 0x44, 0x7E, 0x02, 0x02, 0x44, 0x89, 0x12, 0x67, 0x40, 0x81, 
  0x02, 0x93, 0x26, 0x4C, 0x99, 0x32, 0x64, 0xFF, 0x92, 0x92, 0x92, 0x92, 
  0x92, 0x92, 0x92, 0xFE, 0x02, 0x02, 0xE0, 0x40, 0x81, 0xE2, 0x64, 0x49, 
  0x9E, 0x46, 0x8D, 0x1B, 0xB5, 0x69, 0xD5, 0xB3, 0x82, 0x08, 0x3E, 0x8E, 
  0x18, 0xFE, 0x78, 0x18, 0x11, 0xF0, 0x60, 0x83, 0x3C, 0x9C, 0x96, 0xB2, 
  0xE2, 0xA2, 0xB2, 0x96, 0x9C, 0x3C, 0xC9, 0x13, 0x23, 0xC6, 0x99, 0x22, 
  0x38, 0x08, 0xF2, 0x24, 0xCE, 0xC0, 0x00, 0x79, 0x82, 0x05, 0xCC, 0x91, 
  0xA3, 0x44, 0x70, 0xFA, 0x2F, 0x22, 0x8B, 0xE0, 0xFF, 0x0C, 0x30, 0xC3, 
  0x00, 0x3C, 0x48, 0x91, 0x24, 0x5F, 0xE0, 0x80, 0x38, 0x89, 0xF2, 0x06, 
  0x07, 0x80, 0x56, 0x54, 0x38, 0x7C, 0x54, 0xD2, 0x70, 0x27, 0x02, 0x0B, 
  0xC0, 0x44, 0x99, 0x72, 0xA6, 0x48, 0x80, 0x20, 0x70, 0x02, 0x24, 0xCB, 
  0x95, 0x32, 0x44, 0xCB, 0x4E, 0x34, 0xDB, 0x20, 0x3C, 0x48, 0x93, 0x24, 
  0x58, 0x80, 0x46, 0x8D, 0xBB, 0x77, 0x6A, 0xC0, 0x8A, 0x2F, 0xA2, 0x8A, 
  0x20, 0x38, 0x89, 0x1A, 0x34, 0x47, 0x00, 0xFA, 0x28, 0xA2, 0x8A, 0x20, 
  0x4B, 0xE8, 0x20, 0x83, 0xE8, 0x20, 0xFC, 0x24, 0x00, 0xE2, 0x27, 0xC8, 
  0x18, 0x1E, 0x3C, 0xC1, 0x03, 0xC4, 0x08, 0x18, 0x1F, 0x3C, 0x81, 0xE2, 
  0x06, 0x07, 0x80, 0xF8, 0x82, 0x08, 0x20, 0x82, 0x3E, 0x30, 0x0E, 0x22, 
  0x22, 0x20, 0x4B, 0xE2, 0x08, 0x20, 0x82, 0x08, 0xF8, 0x58, 0x38, 0x42, 
  0x10, 0x84, 0x04, 0x1F, 0xF0, 0xC3, 0x0C, 0x30, 0xC3, 0x00, 0x07, 0xFC, 
  0x30, 0xC3, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x49, 0x00, 0x55, 
  0x00
};

const GFXglyph luconUkr6Glyphs[] PROGMEM = {
  /* GFX: 0x20 (U+0020 ' ') */ { 0, 0, 0, 7, 0, 0 },
  /* GFX: 0x21 (U+0021 '!') */ { 0, 3, 8, 7, 2, -6 },
  /* GFX: 0x22 (U+0022 '"') */ { 3, 5, 3, 7, 1, -7 },
  /* GFX: 0x23 (U+0023 '#') */ { 5, 7, 8, 7, 0, -6 },
  /* GFX: 0x24 (U+0024 '$') */ { 12, 6, 10, 7, 1, -7 },
  /* GFX: 0x25 (U+0025 '%') */ { 20, 8, 8, 7, 0, -6 },
  /* GFX: 0x26 (U+0026 '&') */ { 28, 8, 8, 7, 0, -6 },
  /* GFX: 0x27 (U+0027 ''') */ { 36, 3, 3, 7, 2, -7 },
  /* GFX: 0x28 (U+0028 '(') */ { 38, 5, 11, 7, 2, -7 },
  /* GFX: 0x29 (U+0029 ')') */ { 45, 6, 11, 7, 0, -7 },
  /* GFX: 0x2A (U+002A '*') */ { 54, 6, 4, 7, 1, -6 },
  /* GFX: 0x2B (U+002B '+') */ { 57, 7, 6, 7, 0, -4 },
  /* GFX: 0x2C (U+002C ',') */ { 63, 3, 4, 7, 2, 0 },
  /* GFX: 0x2D (U+002D '-') */ { 65, 5, 1, 7, 1, -2 },
  /* GFX: 0x2E (U+002E '.') */ { 66, 3, 2, 7, 2, 0 },
  /* GFX: 0x2F (U+002F '/') */ { 67, 7, 11, 7, 0, -7 },
  /* GFX: 0x30 (U+0030 '0') */ { 77, 7, 8, 7, 0, -6 },
  /* GFX: 0x31 (U+0031 '1') */ { 84, 6, 8, 7, 1, -6 },
  /* GFX: 0x32 (U+0032 '2') */ { 90, 6, 8, 7, 0, -6 },
  /* GFX: 0x33 (U+0033 '3') */ { 96, 6, 8, 7, 1, -6 },
  /* GFX: 0x34 (U+0034 '4') */ { 102, 7, 8, 7, 0, -6 },
  /* GFX: 0x35 (U+0035 '5') */ { 109, 6, 8, 7, 1, -6 },
  /* GFX: 0x36 (U+0036 '6') */ { 115, 7, 8, 7, 0, -6 },
  /* GFX: 0x37 (U+0037 '7') */ { 122, 6, 8, 7, 1, -6 },
  /* GFX: 0x38 (U+0038 '8') */ { 128, 7, 8, 7, 0, -6 },
  /* GFX: 0x39 (U+0039 '9') */ { 135, 7, 8, 7, 0, -6 },
  /* GFX: 0x3A (U+003A ':') */ { 142, 3, 6, 7, 2, -4 },
  /* GFX: 0x3B (U+003B ';') */ { 145, 3, 8, 7, 2, -4 },
  /* GFX: 0x3C (U+003C '<') */ { 148, 7, 6, 7, 0, -4 },
  /* GFX: 0x3D (U+003D '=') */ { 154, 7, 3, 7, 0, -3 },
  /* GFX: 0x3E (U+003E '>') */ { 157, 7, 6, 7, 0, -4 },
  /* GFX: 0x3F (U+003F '?') */ { 163, 7, 8, 7, 0, -6 },
  /* GFX: 0x40 (U+0040 '@') */ { 170, 8, 8, 7, 0, -6 },
  /* GFX: 0x41 (U+0041 'A') */ { 178, 8, 8, 7, 0, -6 },
  /* GFX: 0x42 (U+0042 'B') */ { 186, 6, 8, 7, 1, -6 },
  /* GFX: 0x43 (U+0043 'C') */ { 192, 7, 8, 7, 0, -6 },
  /* GFX: 0x44 (U+0044 'D') */ { 199, 7, 8, 7, 0, -6 },
  /* GFX: 0x45 (U+0045 'E') */ { 206, 6, 8, 7, 1, -6 },
  /* GFX: 0x46 (U+0046 'F') */ { 212, 6, 8, 7, 1, -6 },
  /* GFX: 0x47 (U+0047 'G') */ { 218, 7, 8, 7, 0, -6 },
  /* GFX: 0x48 (U+0048 'H') */ { 225, 7, 8, 7, 0, -6 },
  /* GFX: 0x49 (U+0049 'I') */ { 232, 6, 8, 7, 1, -6 },
  /* GFX: 0x4A (U+004A 'J') */ { 238, 5, 8, 7, 1, -6 },
  /* GFX: 0x4B (U+004B 'K') */ { 243, 6, 8, 7, 1, -6 },
  /* GFX: 0x4C (U+004C 'L') */ { 249, 6, 8, 7, 1, -6 },
  /* GFX: 0x4D (U+004D 'M') */ { 255, 7, 8, 7, 0, -6 },
  /* GFX: 0x4E (U+004E 'N') */ { 262, 7, 8, 7, 0, -6 },
  /* GFX: 0x4F (U+004F 'O') */ { 269, 7, 8, 7, 0, -6 },
  /* GFX: 0x50 (U+0050 'P') */ { 276, 6, 8, 7, 1, -6 },
  /* GFX: 0x51 (U+0051 'Q') */ { 282, 8, 10, 7, 0, -6 },
  /* GFX: 0x52 (U+0052 'R') */ { 292, 6, 8, 7, 1, -6 },
  /* GFX: 0x53 (U+0053 'S') */ { 298, 7, 8, 7, 0, -6 },
  /* GFX: 0x54 (U+0054 'T') */ { 305, 8, 8, 7, 0, -6 },
  /* GFX: 0x55 (U+0055 'U') */ { 313, 7, 8, 7, 0, -6 },
  /* GFX: 0x56 (U+0056 'V') */ { 320, 8, 8, 7, 0, -6 },
  /* GFX: 0x57 (U+0057 'W') */ { 328, 8, 8, 7, 0, -6 },
  /* GFX: 0x58 (U+0058 'X') */ { 336, 8, 8, 7, 0, -6 },
  /* GFX: 0x59 (U+0059 'Y') */ { 344, 8, 8, 7, 0, -6 },
  /* GFX: 0x5A (U+005A 'Z') */ { 352, 7, 8, 7, 0, -6 },
  /* GFX: 0x5B (U+005B '[') */ { 359, 5, 11, 7, 2, -7 },
  /* GFX: 0x5C (U+005C '\') */ { 366, 7, 11, 7, 0, -7 },
  /* GFX: 0x5D (U+005D ']') */ { 376, 4, 11, 7, 1, -7 },
  /* GFX: 0x5E (U+005E '^') */ { 382, 7, 7, 7, 0, -7 },
  /* GFX: 0x5F (U+005F '_') */ { 389, 8, 1, 7, 0, 2 },
  /* GFX: 0x60 (U+0060 '`') */ { 390, 3, 2, 7, 2, -7 },
  /* GFX: 0x61 (U+0061 'a') */ { 391, 7, 6, 7, 0, -4 },
  /* GFX: 0x62 (U+0062 'b') */ { 397, 6, 9, 7, 1, -7 },
  /* GFX: 0x63 (U+0063 'c') */ { 404, 7, 6, 7, 0, -4 },
  /* GFX: 0x64 (U+0064 'd') */ { 410, 7, 9, 7, 0, -7 },
  /* GFX: 0x65 (U+0065 'e') */ { 418, 7, 6, 7, 0, -4 },
  /* GFX: 0x66 (U+0066 'f') */ { 424, 8, 9, 7, 0, -7 },
  /* GFX: 0x67 (U+0067 'g') */ { 433, 7, 8, 7, 0, -4 },
  /* GFX: 0x68 (U+0068 'h') */ { 440, 6, 9, 7, 1, -7 },
  /* GFX: 0x69 (U+0069 'i') */ { 447, 4, 9, 7, 1, -7 },
  /* GFX: 0x6A (U+006A 'j') */ { 452, 6, 11, 7, 0, -7 },
  /* GFX: 0x6B (U+006B 'k') */ { 461, 6, 9, 7, 1, -7 },
  /* GFX: 0x6C (U+006C 'l') */ { 468, 4, 9, 7, 1, -7 },
  /* GFX: 0x6D (U+006D 'm') */ { 473, 7, 6, 7, 0, -4 },
  /* GFX: 0x6E (U+006E 'n') */ { 479, 6, 6, 7, 1, -4 },
  /* GFX: 0x6F (U+006F 'o') */ { 484, 7, 6, 7, 0, -4 },
  /* GFX: 0x70 (U+0070 'p') */ { 490, 6, 8, 7, 1, -4 },
  /* GFX: 0x71 (U+0071 'q') */ { 496, 7, 8, 7, 0, -4 },
  /* GFX: 0x72 (U+0072 'r') */ { 503, 6, 6, 7, 1, -4 },
  /* GFX: 0x73 (U+0073 's') */ { 508, 6, 6, 7, 1, -4 },
  /* GFX: 0x74 (U+0074 't') */ { 513, 7, 8, 7, 0, -6 },
  /* GFX: 0x75 (U+0075 'u') */ { 520, 6, 6, 7, 1, -4 },
  /* GFX: 0x76 (U+0076 'v') */ { 525, 7, 6, 7, 0, -4 },
  /* GFX: 0x77 (U+0077 'w') */ { 531, 8, 6, 7, 0, -4 },
  /* GFX: 0x78 (U+0078 'x') */ { 537, 7, 6, 7, 0, -4 },
  /* GFX: 0x79 (U+0079 'y') */ { 543, 7, 8, 7, 0, -4 },
  /* GFX: 0x7A (U+007A 'z') */ { 550, 7, 6, 7, 0, -4 },
  /* GFX: 0x7B (U+007B '{') */ { 556, 5, 11, 7, 1, -7 },
  /* GFX: 0x7C (U+007C '|') */ { 563, 2, 11, 7, 3, -7 },
  /* GFX: 0x7D (U+007D '}') */ { 566, 5, 11, 7, 1, -7 },
  /* GFX: 0x7E (U+007E '~') */ { 573, 7, 2, 7, 0, -2 },
  /* GFX: 0x7F (U+007F '?') */ { 575, 5, 8, 7, 1, -6 },
  /* GFX: 0x80 (U+0440 'р') */ { 580, 6, 8, 7, 1, -4 },
  /* GFX: 0x81 (U+0441 'с') */ { 586, 7, 6, 7, 0, -4 },
  /* GFX: 0x82 (U+0442 'т') */ { 592, 7, 6, 7, 0, -4 },
  /* GFX: 0x83 (U+0443 'у') */ { 598, 7, 8, 7, 0, -4 },
  /* GFX: 0x84 (U+0444 'ф') */ { 605, 7, 10, 7, 0, -6 },
  /* GFX: 0x85 (U+0445 'х') */ { 614, 7, 6, 7, 0, -4 },
  /* GFX: 0x86 (U+0446 'ц') */ { 620, 7, 7, 7, 0, -4 },
  /* GFX: 0x87 (U+0447 'ч') */ { 627, 6, 6, 7, 0, -4 },
  /* GFX: 0x88 (U+0448 'ш') */ { 632, 7, 6, 7, 0, -4 },
  /* GFX: 0x89 (U+0449 'щ') */ { 638, 8, 7, 7, 0, -4 },
  /* GFX: 0x8A (U+044A 'ъ') */ { 645, 7, 6, 7, 0, -4 },
  /* GFX: 0x8B (U+044B 'ы') */ { 651, 7, 6, 7, 0, -4 },
  /* GFX: 0x8C (U+044C 'ь') */ { 657, 6, 6, 7, 1, -4 },
  /* GFX: 0x8D (U+044D 'э') */ { 662, 7, 6, 7, 0, -4 },
  /* GFX: 0x8E (U+044E 'ю') */ { 668, 8, 6, 7, 0, -4 },
  /* GFX: 0x8F (U+044F 'я') */ { 674, 6, 6, 7, 0, -4 },
  /* GFX: 0x90 (U+0410 'А') */ { 679, 8, 8, 7, 0, -6 },
  /* GFX: 0x91 (U+0411 'Б') */ { 687, 6, 8, 7, 1, -6 },
  /* GFX: 0x92 (U+0412 'В') */ { 693, 6, 8, 7, 1, -6 },
  /* GFX: 0x93 (U+0413 'Г') */ { 699, 6, 8, 7, 1, -6 },
  /* GFX: 0x94 (U+0414 'Д') */ { 705, 7, 10, 7, 0, -6 },
  /* GFX: 0x95 (U+0415 'Е') */ { 714, 6, 8, 7, 1, -6 },
  /* GFX: 0x96 (U+0416 'Ж') */ { 720, 8, 8, 7, 0, -6 },
  /* GFX: 0x97 (U+0417 'З') */ { 728, 7, 8, 7, 0, -6 },
  /* GFX: 0x98 (U+0418 'И') */ { 735, 7, 8, 7, 0, -6 },
  /* GFX: 0x99 (U+0419 'Й') */ { 742, 7, 9, 7, 0, -7 },
  /* GFX: 0x9A (U+041A 'К') */ { 750, 6, 8, 7, 1, -6 },
  /* GFX: 0x9B (U+041B 'Л') */ { 756, 7, 8, 7, 0, -6 },
  /* GFX: 0x9C (U+041C 'М') */ { 763, 7, 8, 7, 0, -6 },
  /* GFX: 0x9D (U+041D 'Н') */ { 770, 7, 8, 7, 0, -6 },
  /* GFX: 0x9E (U+041E 'О') */ { 777, 7, 8, 7, 0, -6 },
  /* GFX: 0x9F (U+041F 'П') */ { 784, 7, 8, 7, 0, -6 },
  /* GFX: 0xA0 (U+0420 'Р') */ { 791, 6, 8, 7, 1, -6 },
  /* GFX: 0xA1 (U+0421 'С') */ { 797, 7, 8, 7, 0, -6 },
  /* GFX: 0xA2 (U+0422 'Т') */ { 804, 8, 8, 7, 0, -6 },
  /* GFX: 0xA3 (U+0423 'У') */ { 812, 8, 8, 7, 0, -6 },
  /* GFX: 0xA4 (U+0424 'Ф') */ { 820, 8, 8, 7, 0, -6 },
  /* GFX: 0xA5 (U+0425 'Х') */ { 828, 8, 8, 7, 0, -6 },
  /* GFX: 0xA6 (U+0426 'Ц') */ { 836, 8, 10, 7, 0, -6 },
  /* GFX: 0xA7 (U+0427 'Ч') */ { 846, 7, 8, 7, 0, -6 },
  /* GFX: 0xA8 (U+0428 'Ш') */ { 853, 7, 8, 7, 0, -6 },
  /* GFX: 0xA9 (U+0429 'Щ') */ { 860, 8, 10, 7, 0, -6 },
  /* GFX: 0xAA (U+042A 'Ъ') */ { 870, 7, 8, 7, 0, -6 },
  /* GFX: 0xAB (U+042B 'Ы') */ { 877, 7, 8, 7, 0, -6 },
  /* GFX: 0xAC (U+042C 'Ь') */ { 884, 6, 8, 7, 1, -6 },
  /* GFX: 0xAD (U+042D 'Э') */ { 890, 7, 8, 7, 0, -6 },
  /* GFX: 0xAE (U+042E 'Ю') */ { 897, 8, 8, 7, 0, -6 },
  /* GFX: 0xAF (U+042F 'Я') */ { 905, 7, 8, 7, 0, -6 },
  /* GFX: 0xB0 (U+0430 'а') */ { 912, 7, 6, 7, 0, -4 },
  /* GFX: 0xB1 (U+0431 'б') */ { 918, 7, 10, 7, 0, -8 },
  /* GFX: 0xB2 (U+0432 'в') */ { 927, 6, 6, 7, 1, -4 },
  /* GFX: 0xB3 (U+0433 'г') */ { 932, 6, 6, 7, 1, -4 },
  /* GFX: 0xB4 (U+0434 'д') */ { 937, 7, 7, 7, 0, -4 },
  /* GFX: 0xB5 (U+0435 'е') */ { 944, 7, 6, 7, 0, -4 },
  /* GFX: 0xB6 (U+0436 'ж') */ { 950, 8, 6, 7, 0, -4 },
  /* GFX: 0xB7 (U+0437 'з') */ { 956, 6, 6, 7, 1, -4 },
  /* GFX: 0xB8 (U+0438 'и') */ { 961, 7, 6, 7, 0, -4 },
  /* GFX: 0xB9 (U+0439 'й') */ { 967, 7, 9, 7, 0, -7 },
  /* GFX: 0xBA (U+043A 'к') */ { 975, 6, 6, 7, 1, -4 },
  /* GFX: 0xBB (U+043B 'л') */ { 980, 7, 6, 7, 0, -4 },
  /* GFX: 0xBC (U+043C 'м') */ { 986, 7, 6, 7, 0, -4 },
  /* GFX: 0xBD (U+043D 'н') */ { 992, 6, 6, 7, 1, -4 },
  /* GFX: 0xBE (U+043E 'о') */ { 997, 7, 6, 7, 0, -4 },
  /* GFX: 0xBF (U+043F 'п') */ { 1003, 6, 6, 7, 1, -4 },
  /* GFX: 0xC0 (U+0401 'Ё') */ { 1008, 6, 9, 7, 1, -7 },
  /* GFX: 0xC1 (U+0451 'ё') */ { 1015, 7, 8, 7, 0, -6 },
  /* GFX: 0xC2 (U+0404 'Є') */ { 1022, 7, 8, 7, 0, -6 },
  /* GFX: 0xC3 (U+0454 'є') */ { 1029, 7, 6, 7, 0, -4 },
  /* GFX: 0xC4 (U+0406 'І') */ { 1035, 6, 8, 7, 1, -6 },
  /* GFX: 0xC5 (U+0456 'і') */ { 1041, 4, 9, 7, 1, -7 },
  /* GFX: 0xC6 (U+0407 'Ї') */ { 1046, 6, 9, 7, 1, -7 },
  /* GFX: 0xC7 (U+0457 'ї') */ { 1053, 5, 8, 7, 1, -6 },
  /* GFX: 0xC8 (U+0490 'Ґ') */ { 1058, 6, 10, 7, 1, -8 },
  /* GFX: 0xC9 (U+0491 'ґ') */ { 1066, 6, 7, 7, 1, -5 },
  /* GFX: 0xCA (U+20B4 '?') */ { 1072, 5, 8, 7, 1, -6 },
  /* GFX: 0xCB (U+0027 ''') */ { 1077, 3, 3, 7, 2, -7 },
  /* GFX: 0xCC (U+00B0 '?') */ { 1079, 3, 3, 7, 2, -6 },
};

const GFXfont luconUkr6 PROGMEM = {
  (uint8_t  *)luconUkr6Bitmaps,
  (GFXglyph *)luconUkr6Glyphs,
  0x0020, 0x00CC, 13
};

// Approx. 1081 bytes
